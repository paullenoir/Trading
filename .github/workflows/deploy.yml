name: Deploy Trading Application

on:
  push:
    branches:
      - master

concurrency:
  group: master
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Extraire le code dans un environnement GitHub Action
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Afficher la structure des fichiers pour validation
      - name: Display repository structure
        run: |
          pwd
          ls -R

      # Vérification des permissions pour les fichiers et répertoires
      - name: Check and Fix Permissions
        run: |
          echo "Vérification des permissions dans le répertoire de travail"
          chmod -R u+rw .
          ls -l

      # Installer Docker et Docker Compose sur la VM distante (volume spécifique /dev/sdal)
      - name: Install Docker and Docker Compose on /dev/sdal
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_VM_SSH_KEY }}
          script: |
            # Monter le volume à /mnt/data (par exemple, monter le volume /dev/sdal)
            sudo mkdir -p /mnt/data
            sudo mount /dev/sdal /mnt/data

            # Changer le répertoire de travail pour /mnt/data
            cd /mnt/data

            # Vérifier si Docker est installé, sinon l'installer
            docker --version || sudo apt-get install -y docker.io
            docker-compose --version || sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # Vérifier les installations
            docker --version
            docker-compose --version

      # Build des images Docker localement
      - name: Build Backend Image
        working-directory: Back/trading_back_v2
        run: |
          docker build -t trading-back -f Dockerfile .

      - name: Build API Image
        working-directory: API_trading
        run: |
          docker build -t trading-api -f Dockerfile .

      - name: Build Frontend Image
        working-directory: Front/trading_front
        run: |
          docker build -t trading-front -f Dockerfile .

      # Sauvegarder les images Docker en fichiers .tar
      - name: Save Docker images
        run: |
          docker save -o trading-back.tar trading-back
          chmod 644 trading-back.tar
          docker save -o trading-api.tar trading-api
          chmod 644 trading-api.tar
          docker save -o trading-front.tar trading-front
          chmod 644 trading-front.tar

      - name: Debug file transfer
        run: |
          echo "Contenu du répertoire :"
          pwd
          ls -lh
          
          echo "Vérification des fichiers à transférer :"
          test -f trading-back.tar && echo "trading-back.tar existe" || echo "trading-back.tar MANQUANT"
          test -f trading-api.tar && echo "trading-api.tar existe" || echo "trading-api.tar MANQUANT"
          test -f trading-front.tar && echo "trading-front.tar existe" || echo "trading-front.tar MANQUANT"
          test -f docker-compose.yml && echo "docker-compose.yml existe" || echo "docker-compose.yml MANQUANT"
          
          echo "Tailles des fichiers :"
          du -h trading-back.tar trading-api.tar trading-front.tar docker-compose.yml || true

      - name: Test SSH Connection
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_VM_SSH_KEY }}
          port: 22
          script: |
            echo "Connexion SSH réussie"
            hostname
            whoami

      - name: Transfer Docker images to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_VM_SSH_KEY }}
          port: 22
          source: |
            trading-back.tar,
            trading-api.tar,
            trading-front.tar,
            docker-compose.yml
          target: "/mnt/data"
          strip_components: 0
          debug: true

      # Charger les images Docker et déployer sur la VM dans le volume /mnt/data
      - name: Deploy on VM
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_VM_SSH_KEY }}
          script: |
            cd /mnt/data

            # Charger les images Docker
            docker load -i trading-back.tar
            docker load -i trading-api.tar
            docker load -i trading-front.tar

            # Arrêter et supprimer les conteneurs existants, ainsi que les images
            docker-compose down --rmi all

            # Redémarrer les services
            docker-compose up -d

            # Nettoyer les images et conteneurs inutiles
            docker system prune -af